name: CI Pipeline

on:
  push:
  pull_request:

jobs:
  lint:
    name: Lint Java code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Checkstyle
        run: |
            CHECKSTYLE_VERSION=10.13.1
            curl -L -o checkstyle.jar https://github.com/checkstyle/checkstyle/releases/download/checkstyle-${CHECKSTYLE_VERSION}/checkstyle-${CHECKSTYLE_VERSION}-all.jar
            # Use -L -o to save google_checks.xml with exact name
            curl -L -o google_checks.xml https://raw.githubusercontent.com/checkstyle/checkstyle/master/src/main/resources/google_checks.xml
            ls -l checkstyle.jar google_checks.xml

      - name: Install Apache Commons CLI
        run: |
         sudo apt-get update
         sudo apt-get install -y libcommons-cli-java

      - name: Run Checkstyle
        run: |
           java -jar checkstyle.jar -c google_checks.xml $(find . -name "*.java")

  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create bin directory
        run: mkdir -p LABO0/lab/bin

      - name: Compile tests
        run: |
          javac -d LABO0/lab/bin -cp "lib/junit-4.13.2.jar:lib/hamcrest-core-1.3.jar" LABO0/lab/tests/lab/tests/AppTest.java

      - name: Run tests
        run: |
          # Important: indiquer le nom complet du package de la classe AppTest
          java -cp "LABO0/lab/bin:lib/junit-4.13.2.jar:lib/hamcrest-core-1.3.jar" org.junit.runner.JUnitCore lab.tests.AppTest

  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t lab0_log430 .

  push-to-dockerhub:
    name: Push image to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "mdyoucef00" --password-stdin

      - name: Build and tag image
        run: |
          docker build -t docker.io/mdyoucef00/lab0_log430:latest .

      - name: Push image
        run: |
          docker push docker.io/mdyoucef00/lab0_log430:latest
